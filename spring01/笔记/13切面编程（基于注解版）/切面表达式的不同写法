3.1 execution
       由于Spring切面粒度最小是达到方法级别，而execution表达式可以用于明确指定方法返回类型，类名，方法名和参数名等与方法相关的部件，并且在Spring中，大部分需要使用AOP的业务场景也只需要达到方法级别即可，因而execution表达式的使用是最为广泛的。如下是execution表达式的语法：

execution(modifiers-pattern? ret-type-pattern declaring-type-pattern?name-pattern(param-pattern) throws-pattern?)
       这里问号表示当前项可以有也可以没有，其中各项的语义如下：

modifiers-pattern：方法的可见性，如public，protected；
ret-type-pattern：方法的返回值类型，如int，void等；
declaring-type-pattern：方法所在类的全路径名，如com.spring.Aspect；
name-pattern：方法名类型，如buisinessService()；
param-pattern：方法的参数类型，如java.lang.String；
throws-pattern：方法抛出的异常类型，如java.lang.Exception；
        如下是一个使用execution表达式的例子：

execution(public * com.spring.service.BusinessObject.businessService(java.lang.String,..))
       上述切点表达式将会匹配使用public修饰，返回值为任意类型，并且是com.spring.BusinessObject类中名称为businessService的方法，方法可以有多个参数，但是第一个参数必须是java.lang.String类型的方法。上述示例中我们使用了..通配符，关于通配符的类型，主要有两种：

*通配符，该通配符主要用于匹配单个单词，或者是以某个词为前缀或后缀的单词。
       如下示例表示返回值为任意类型，在com.spring.service.BusinessObject类中，并且参数个数为零的方法：

execution(* com.spring.service.BusinessObject.*())
       下述示例表示返回值为任意类型，在com.spring.service包中，以Business为前缀的类，并且是类中参数个数为零方法：

execution(* com.spring.service.Business*.*())
..通配符，该通配符表示0个或多个项，主要用于declaring-type-pattern和param-pattern中，如果用于declaring-type-pattern中，则表示匹配当前包及其子包，如果用于param-pattern中，则表示匹配0个或多个参数。
       如下示例表示匹配返回值为任意类型，并且是com.spring.service包及其子包下的任意类的名称为businessService的方法，而且该方法不能有任何参数：

execution(* com.spring.service..*.businessService())
       这里需要说明的是，包路径service..*.businessService()中的..应该理解为延续前面的service路径，表示到service路径为止，或者继续延续service路径，从而包括其子包路径；后面的*.businessService()，这里的*表示匹配一个单词，因为是在方法名前，因而表示匹配任意的类。

       如下示例是使用..表示任意个数的参数的示例，需要注意，表示参数的时候可以在括号中事先指定某些类型的参数，而其余的参数则由..进行匹配：

execution(* com.spring.service.BusinessObject.businessService(java.lang.String,..))

具体的第二遍再说
    https://www.cnblogs.com/zhangxufeng/p
    /9160869.html#:~:text=%E5%88%87%E9%9D%A2%EF%BC%9A%E4%BD%BF%E7
    %94%A8%E5%88%87%E7%82%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A1%A8%
    E7%A4%BA%EF%BC%8C%E6%8C%87%E5%AE%9A%E4%BA%86%E5%BD%93%E5%89%8
    D%E5%88%87%E9%9D%A2%E9%80%BB%E8%BE%91%E6%89%80%E8%A6%81%E5%8C
    %85%E8%A3%B9%E7%9A%84%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9D%97%E7%
    9A%84%E8%8C%83%E5%9B%B4%E5%A4%A7%E5%B0%8F%EF%BC%9B,Advice%EF%
    BC%9A%E4%B9%9F%E5%8D%B3%E5%88%87%E9%9D%A2%E9%80%BB%E8%BE%91%E
    F%BC%8C%E6%8C%87%E5%AE%9A%E4%BA%86%E5%BD%93%E5%89%8D%E7%94%A8
    %E4%BA%8E%E5%8C%85%E8%A3%B9%E5%88%87%E9%9D%A2%E6%8C%87%E5%AE%
    9A%E7%9A%84%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9D%97%E7%9A%84%E9%80%BB%E8%BE%91%E3%80%82